CREATE TABLE IF NOT EXISTS 
USER
    (ID INTEGER PRIMARY KEY AUTOINCREMENT, 
     NAME TEXT NOT NULL, 
     EMAIL TEXT NOT NULL,
     ACTIVE INTEGER NOT NULL,
     PHOTO BLOB,
     USER_UPDATE TEXT NOT NULL,
     DATE_UPDATE TEXT NOT NULL,
     USER_INSERT TEXT NOT NULL,
     DATE_INSERT TEXT NOT NULL,
     FOREIGN KEY(USER_UPDATE) REFERENCES USER(ID),
     FOREIGN KEY(USER_INSERT) REFERENCES USER(ID)
 );


 CREATE TABLE IF NOT EXISTS 
 CLIENT
     (ID INTEGER PRIMARY KEY AUTOINCREMENT, 
     NAME TEXT NOT NULL, 
     EMAIL TEXT NOT NULL,
     FISICA INTEGER NOT NULL,
     PHOTO BLOB,
     USER_UPDATE TEXT NOT NULL,
     DATE_UPDATE TEXT NOT NULL,
     USER_INSERT TEXT NOT NULL,
     DATE_INSERT TEXT NOT NULL,
     FOREIGN KEY(USER_UPDATE) REFERENCES USER(ID),
     FOREIGN KEY(USER_INSERT) REFERENCES USER(ID)
 );

 CREATE TABLE IF NOT EXISTS 
 ORDER_PURCHASE
     (ID INTEGER PRIMARY KEY AUTOINCREMENT, 
     NUMBER_ORDER TEXT NOT NULL, 
     CLIENT INTEGER NOT NULL,
     USER_UPDATE TEXT NOT NULL,
     DATE_UPDATE TEXT NOT NULL,
     USER_INSERT TEXT NOT NULL,
     DATE_INSERT TEXT NOT NULL,
     FOREIGN KEY(CLIENT) REFERENCES CLIENT(ID),
     FOREIGN KEY(USER_UPDATE) REFERENCES USER(ID),
     FOREIGN KEY(USER_INSERT) REFERENCES USER(ID)
 );
 
 CREATE TABLE IF NOT EXISTS 
 PRODUCT
     (ID INTEGER PRIMARY KEY AUTOINCREMENT, 
     NAME TEXT NOT NULL, 
     DESCRIPTION TEXT NOT NULL,
     AMOUNT REAL NOT NULL,
     USER_UPDATE TEXT NOT NULL,
     DATE_UPDATE TEXT NOT NULL,
     USER_INSERT TEXT NOT NULL,
     DATE_INSERT TEXT NOT NULL, 
     FOREIGN KEY(USER_UPDATE) REFERENCES USER(ID),
     FOREIGN KEY(USER_INSERT) REFERENCES USER(ID)
);
 
 CREATE TABLE IF NOT EXISTS 
 ORDER_PRODUCT
     (ID INTEGER PRIMARY KEY AUTOINCREMENT, 
     ID_ORDER INTEGER NOT NULL,
     PRODUCT INTEGER NOT NULL, 
     OBS TEXT NOT NULL,
     COUNT INTEGER NOT NULL,
     USER_UPDATE TEXT NOT NULL,
     DATE_UPDATE TEXT NOT NULL,
     USER_INSERT TEXT NOT NULL,
     DATE_INSERT TEXT NOT NULL, 
     FOREIGN KEY(PRODUCT) REFERENCES PRODUCT(ID),
     FOREIGN KEY(ID_ORDER) REFERENCES  ORDER_PURCHASE(ID),
     FOREIGN KEY(USER_UPDATE) REFERENCES USER(ID),
     FOREIGN KEY(USER_INSERT) REFERENCES USER(ID)
 );
